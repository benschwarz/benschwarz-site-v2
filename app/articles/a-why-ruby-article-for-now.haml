-# title: Why Ruby?
-# published: 2009-11-26
-# excerpt: A summary that doesn't talk about Ruby being "beautiful" or "expressive"
-# keywords: ruby, macruby, ironruby, rubinius, rbx, vm, virtual machine, implementations, language, llvm

.column.eight
  :smartypants
    There have been plenty of articles explaining why Ruby is a viable choice, although; looking back, they're all out of date and have become somewhat inaccurate. 

    Most of my audience are ruby hackers already, this article isn't for you. It's for the people who question your technology choices, your clients or managers.

    Many business people have come to rely on their LAMP, .NET or J2EE stacks over the years, they're familiar, safe and well supported. 
    Much of the focus for the "why ruby" argument has been focused on developer happiness, or 'elegance'.

    Let me let you in in on a little secret - Your clients don't really care how happy you are, as long as you deliver a great product (really awesome clients do, but thats another story).
    
    So what's the angle? _Deliver great products._ Sure, it isn't all that easy but once the focus of a well designed toolset is out of the way, you can get to providing some real value â€“ then, grin like an idiot.

    ## Ruby today and in the future

    Apart from the core language itself, Ruby has become a very strong proponent for open source software. Github are pioneering in this regard and open source has never been so easy or joyful. 
    I've occasionally looked at other languages and frameworks but nothing has ever stuck because it feels like a baron wasteland compared to Ruby.

    Now, lets name drop a little: "Microsoft" and "Apple". There. That felt good didn't it? 
    Both of these globally dominating companies are investing in the development space of Ruby as a language. Through the [IronRuby](http://www.ironruby.net/) and [MacRuby](http://www.macruby.org/) projects respectively, there are people working full time (and pulling a salary) on Ruby. Still a quirky little language? 

    The aims of these projects are somewhat different, however, one thing has become clear - The power of Ruby is well respected. Ruby developers have a strong focus on creating world class toolsets for their development processes. For this reason the Ruby community has pushed TDD and BDD further than most others.

    ## Outlook
    I'm excited about the future: Using Ruby to build full blown Mac applications via [MacRuby](http://www.macruby.org/) and beautiful web applications and services with frameworks like [Sinatra](http://www.sinatrarb.com/) and [Rails](http://www.rubyonrails.com), all under the guise of the Ruby language.
    
    One day, we'll be able to deploy web applications on Google AppEngine with JRuby and .NET focused environments with [IronRuby](http://www.ironruby.net/). We have a Ruby for all seasons.
    
    We don't need to sneak Ruby through the system anymore ([R.I.P](http://en.wikipedia.org/wiki/Why_the_lucky_stiff), _why), it's becoming more ubiquitous every day. We have recent editions on every Mac sold, Ruby is ready for the hands of millions. Get into it.